<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:batch="http://www.springframework.org/schema/batch" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/batch	http://www.springframework.org/schema/batch/spring-batch-3.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd">

	<!-- JobRepository and JobLauncher are configuration/setup classes -->
	<bean id="jobRepository"
		class="org.springframework.batch.core.repository.support.MapJobRepositoryFactoryBean" />

	<bean id="jobLauncher"
		class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
		<property name="jobRepository" ref="jobRepository" />
	</bean>


	<!-- ItemReader reads a complete line one by one from input file -->
	<bean id="flatFileItemReader" class="org.springframework.batch.item.file.FlatFileItemReader"
		scope="step">
		<property name="resource" value="classpath:com/nt/csv/SuperBrains.csv" />

		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="lineTokenizer">
					<!-- A tokenizer class to be used when items in input record are separated 
						by specific characters -->
					<bean
						class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
						<property name="delimiter" value="," />
					</bean>
				</property>
				<property name="fieldSetMapper">
					<!-- Mapper which maps each individual items in a record to properties 
						in POJO -->
					<bean class="com.nt.mapper.ExamResultFieldSetMapper" />
				</property>
			</bean>
		</property>
	</bean>

	<!-- XML ItemWriter which writes the data in XML format -->
	<bean id="xmlItemWriter" class="org.springframework.batch.item.xml.StaxEventItemWriter">
		
		<property name="resource" value="file:xml/MugUpMasters.xml" />
		
		<property name="rootTagName" value="TopResults" />
		<property name="marshaller">
			<bean class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
				<property name="classesToBeBound">
					<list>
						<value>com.nt.model.ExamResult</value>
					</list>
				</property>
			</bean>
		</property>

	</bean>

	<!-- Optional ItemProcessor to perform business logic/filtering on the input 
		records -->
	<bean id="itemProcessor" class="com.nt.batch.ExamResultItemProcessor" />
	
	<!-- Cfg Job Listener -->
	<bean id="jobListener"  class="com.nt.listener.ExamResultJobListener"/>
	
	
	<!-- Step will need a transaction manager -->
	<bean id="transactionManager"
		class="org.springframework.batch.support.transaction.ResourcelessTransactionManager" />

	<!-- Actual Job -->
	<batch:job id="examResultJob">
		<batch:step id="step1">
			<batch:tasklet transaction-manager="transactionManager">
				<batch:chunk reader="flatFileItemReader" writer="xmlItemWriter"
					processor="itemProcessor" commit-interval="10" />
			</batch:tasklet>
		</batch:step>
	<batch:listeners>
	   <batch:listener ref="jobListener"/>
	</batch:listeners>
	</batch:job>

</beans>			